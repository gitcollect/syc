<project default="test" basedir=".">
	<basename property="ant.project.name" file="${basedir}" />

	<property name="src.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="lib.dir" value="lib" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	
	<property name="main-class" value="syc.Main" />

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<path id="application" location="{jar.dir}/${ant.project.name}.jar" />

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="build">
		<mkdir dir="${classes.dir}" />
		<javac 
			includeantruntime="false" 
			srcdir="${src.dir}" destdir="${classes.dir}" 
			classpathref="classpath" />
	</target>

	<target name="jar" depends="build">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
		</jar>
	</target>

	<target name="run">
		<java fork="true" classname="${main-class}">
			<classpath>
				<path refid="classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
		</java>
	</target>

	<target name="clean-build" depends="clean, build, jar">
		<echo message="Clean built!" />
	</target>

	<target name="test" depends="clean-build">
		<junit printsummary="yes">
			<classpath>
				<path refid="classpath" />
				<path refid="application" />
			</classpath>
			
			<batchtest fork="yes">
				<fileset dir="${src.dir}" includes="*Test.java" />
			</batchtest>
		</junit>
	</target>

	<target name="main" depends="clean-build, run" />
</project>

